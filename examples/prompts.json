[
  {
    "name": "hello-world",
    "mcp_servers": [],
    "messages": [
      {
        "role": "user",
        "content": "{{greeting}} Claude! Please respond with a friendly greeting and tell me you're working correctly.",
        "parameters": {
          "type": "object",
          "properties": {
            "greeting": {
              "type": "string",
              "description": "A greeting to send to Claude"
            }
          },
          "required": []
        }
      }
    ]
  },
  {
    "name": "create-jira-issue",
    "mcp_servers": ["jira"],
    "messages": [
      {
        "role": "user",
        "content": "Create a Jira issue in the project '{{projectKey}}' with summary '{{summary}}' and description '{{description}}'. Use issue type '{{issueType}}' if specified, otherwise use 'Task'.",
        "parameters": {
          "type": "object",
          "properties": {
            "summary": {
              "type": "string",
              "description": "Brief summary of the issue"
            },
            "description": {
              "type": "string",
              "description": "Detailed description of the issue"
            },
            "issueType": {
              "type": "string",
              "description": "Type of issue (Task, Bug, Story, etc.)",
              "default": "Task"
            },
            "projectKey": {
              "type": "string",
              "description": "Project key for the Jira project"
            }
          },
          "required": ["summary", "description", "projectKey"]
        }
      }
    ]
  },
  {
    "name": "clone-github-repository",
    "mcp_servers": [],
    "connections": { "claude_code": ["git-credentials"] },
    "messages": [
      {
        "role": "user",
        "content": "Clone the GitHub repository '{{repository}}' to the current working directory using git tools. Make sure to clone it into the current working directory where this process is running, not into any parent directories. If there's already a local copy in the current directory, update it to the latest version by running 'git pull' inside the repository folder. Use https methods that will work with a .git-credentials file.",
        "parameters": {
          "type": "object",
          "properties": {
            "repository": {
              "type": "string",
              "description": "Repository URL or name in format 'owner/repo'. Example: 'bitovi/bitovi-jira-redirect'."
            }
          },
          "required": ["repository"]
        }
      }
    ]
  },
  {
    "name": "analyze-repository",
    "mcp_servers": ["github"],
    "messages": [
      {
        "role": "user",
        "content": "Analyze the GitHub repository '{{repository}}' and provide insights about its structure, recent activity, and potential improvements.",
        "parameters": {
          "type": "object",
          "properties": {
            "repository": {
              "type": "string",
              "description": "Repository name in format 'owner/repo'"
            }
          },
          "required": ["repository"]
        }
      }
    ]
  },
  {
    "name": "code-review",
    "mcp_servers": ["github"],
    "messages": [
      {
        "role": "system",
        "content": "You are an expert code reviewer. Analyze the provided code and give constructive feedback."
      },
      {
        "role": "user",
        "content": "Please review the code in {{filePath}} and provide feedback on code quality, potential issues, and suggested improvements.",
        "parameters": {
          "type": "object",
          "properties": {
            "filePath": {
              "type": "string",
              "description": "Path to the file to review"
            }
          },
          "required": ["filePath"]
        }
      }
    ]
  },
  {
    "name": "project-status-report",
    "mcp_servers": ["jira", "github"],
    "messages": [
      {
        "role": "user",
        "content": "Generate a project status report for {{projectKey}}. Include information from both Jira issues and GitHub repository activity. Focus on progress over the last {{timeframe}} days.",
        "parameters": {
          "type": "object",
          "properties": {
            "projectKey": {
              "type": "string",
              "description": "Jira project key or GitHub repository"
            },
            "timeframe": {
              "type": "number",
              "description": "Number of days to look back",
              "default": 7
            }
          },
          "required": ["projectKey"]
        }
      }
    ]
  },
  {
    "name": "create-commit-and-push",
    "connections": { "claude_code": ["git-credentials"] },
    "mcp_servers": ["jira", "figma"],
    "messages": [
      {
        "role": "user",
        "content": "Complete in the following steps -- do NOT execute a step BEFORE fully processing the step's instructions. For all steps, use https methods that will work with a .git-credentials file.\n1. If there is already a local copy of '{{repository}}' in the current working directory, navigate to it, update it to the latest version by running 'git pull', and then proceed to Step 2. Otherwise, clone the GitHub repository '{{repository}}' to the current working directory using git tools. Make sure to clone it into the current working directory where this process is running, not into any parent directories. After cloning the directory, navigate into the newly cloned directory. \n2.Review the Jira ticket associated with the provided ticket number {{ticketNumber}}.\n3. Use git tools to change to a new branch, the name of the branch will be the ticket number. If the branch already exists switch to that branch and run 'git pull', \n4. Implement the changes/additions/updates as specified in the Jira ticket.\n5. Commit the changes to the current branch. For the commit message, provide a one sentence description summary of the changes made.\n6. Push the changes and the new branch to the origin remote. Use the upstream flag.",
        "parameters": {
          "type": "object",
          "properties": {
            "ticketNumber": {
              "type": "string",
              "description": "Jira ticket number to pull down issue description and associate with commit."
            },
            "repository": {
              "type": "string",
              "description": "Repository name in format 'owner/repo'"
            }
          },
          "required": ["ticketNumber", "repository"]
        }
      }
    ]
  },
  {
    "name": "git-status-and-commit",
    "mcp_servers": [],
    "messages": [
      {
        "role": "user",
        "content": "Check the git status of the current repository and commit any staged changes with the message '{{commitMessage}}'. If no changes are staged, stage all modified files first. Use the built-in git tools available in the workspace.",
        "parameters": {
          "type": "object",
          "properties": {
            "commitMessage": {
              "type": "string",
              "description": "Message for the git commit"
            }
          },
          "required": ["commitMessage"]
        }
      }
    ]
  }
]
